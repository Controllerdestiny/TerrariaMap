name: Publish Release

on:
  push:
    branches:
      - master

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        runtimeIdentifier: [ win-x64, win-x86, linux-x64, linux-arm, linux-arm64, osx-x64, osx-arm64, linux-musl-x64, linux-musl-arm64 ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x' # 使用你想要的 .NET Core 版本

    - name: Restore NuGet packages
      run: dotnet restore

    - name: Build project
      run: dotnet build --configuration Release

    - name: Publish for ${{ matrix.runtimeIdentifier }}
      run: dotnet publish TerrariaMap/TerrariaMap.csproj --no-self-contained -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=none -p:RuntimeIdentifier=${{ matrix.runtimeIdentifier }} --framework net8.0
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: TerrariaMap_${{ matrix.runtimeIdentifier }}_8.0
        path: |
          TerrariaMap/bin/Release/net8.0/${{ matrix.runtimeIdentifier }}/publish

  create-release:
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        tag: v1.0.0 # 设置你的版本号
        name: Release v1.0.0 # 设置你的发布名称
        body: |
          This is the first release of my project.
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "artifacts/**/*" # 指定要上传的工件路径
